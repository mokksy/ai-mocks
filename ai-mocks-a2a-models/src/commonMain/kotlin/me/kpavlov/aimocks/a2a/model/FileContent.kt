/*
 * FileContent.kt
 *
 * This code was generated by json-kotlin-schema-codegen - JSON Schema Code Generator
 * See https://github.com/pwall567/json-kotlin-schema-codegen
 *
 * It is not advisable to modify generated code as any modifications will be lost
 * when the generation process is re-run.
 *
 * This was generated from A2A Schema: https://raw.githubusercontent.com/google/A2A/refs/heads/main/specification/json/a2a.json
 */
package me.kpavlov.aimocks.a2a.model

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import me.kpavlov.aimocks.a2a.model.serializers.ByteArrayAsBase64Serializer

/**
 * Represents the content of a file, either as base64 encoded bytes or a URI.

Ensures that either 'bytes' or 'uri' is provided, but not both.
 */
@Serializable
public data class FileContent(
    @SerialName("name")
    val name: String? = null,
    @SerialName("mimeType")
    val mimeType: String? = null,
    @Serializable(with = ByteArrayAsBase64Serializer::class)
    @SerialName("bytes")
    val bytes: ByteArray? = null,
    @SerialName("uri")
    val uri: String? = null,
) {
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as FileContent

        if (name != other.name) return false
        if (mimeType != other.mimeType) return false
        if (uri != other.uri) return false

        return true
    }

    override fun hashCode(): Int {
        var result = name?.hashCode() ?: 0
        result = 31 * result + (mimeType?.hashCode() ?: 0)
        result = 31 * result + (uri?.hashCode() ?: 0)
        return result
    }
}
